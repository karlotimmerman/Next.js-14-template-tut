/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Activities, Activity, SeededActivity } from '../models';
export interface ActivitiesCreateNewActivityRequest {
    transferables?: boolean;
    seededActivity?: SeededActivity;
}
export interface ActivitiesDeleteSpecificActivityRequest {
    activity: string;
}
export interface ActivitiesSnapshotRequest {
    transferables?: boolean;
    pseudo?: boolean;
}
/**
 *
 */
export declare class ActivitiesApi extends runtime.BaseAPI {
    /**
     * This will create a new Activity.
     * /activities/create [POST]
     */
    activitiesCreateNewActivityRaw(requestParameters: ActivitiesCreateNewActivityRequest): Promise<runtime.ApiResponse<Activity>>;
    /**
     * This will create a new Activity.
     * /activities/create [POST]
     */
    activitiesCreateNewActivity(requestParameters: ActivitiesCreateNewActivityRequest): Promise<Activity>;
    /**
     * This will delete a specific activity.  important note: if we delete an activity: that is going to be a generic or a specific/ we will also delete its counter part i.e the specific. and vise versa, this ensures that the references are always cleaned.
     * /activities/{activity}/delete [POST]
     */
    activitiesDeleteSpecificActivityRaw(requestParameters: ActivitiesDeleteSpecificActivityRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * This will delete a specific activity.  important note: if we delete an activity: that is going to be a generic or a specific/ we will also delete its counter part i.e the specific. and vise versa, this ensures that the references are always cleaned.
     * /activities/{activity}/delete [POST]
     */
    activitiesDeleteSpecificActivity(requestParameters: ActivitiesDeleteSpecificActivityRequest): Promise<void>;
    /**
     * This will get a snapshot of all of the activities
     * /activities [GET]
     */
    activitiesSnapshotRaw(requestParameters: ActivitiesSnapshotRequest): Promise<runtime.ApiResponse<Activities>>;
    /**
     * This will get a snapshot of all of the activities
     * /activities [GET]
     */
    activitiesSnapshot(requestParameters: ActivitiesSnapshotRequest): Promise<Activities>;
}
