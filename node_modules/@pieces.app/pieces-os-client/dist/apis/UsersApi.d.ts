/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { OAuthToken, UserProfile, Users } from '../models';
export interface AuthenticateFromOauthTokenRequest {
    oAuthToken?: OAuthToken;
}
export interface UsersDisconnectUserRequest {
    user: string;
}
export interface UsersSpecificUserSnapshotRequest {
    user: string;
}
/**
 *
 */
export declare class UsersApi extends runtime.BaseAPI {
    /**
     * Creates a User From a oAuth Token
     * /users/authenticate/from_token [POST]
     */
    authenticateFromOauthTokenRaw(requestParameters: AuthenticateFromOauthTokenRequest): Promise<runtime.ApiResponse<UserProfile>>;
    /**
     * Creates a User From a oAuth Token
     * /users/authenticate/from_token [POST]
     */
    authenticateFromOauthToken(requestParameters: AuthenticateFromOauthTokenRequest): Promise<UserProfile>;
    /**
     * Locally Removing a user for the purpose of Signing Out
     * /users/{user}/disconnect [POST]
     */
    usersDisconnectUserRaw(requestParameters: UsersDisconnectUserRequest): Promise<runtime.ApiResponse<Users>>;
    /**
     * Locally Removing a user for the purpose of Signing Out
     * /users/{user}/disconnect [POST]
     */
    usersDisconnectUser(requestParameters: UsersDisconnectUserRequest): Promise<Users>;
    /**
     * this will return a snapshot of all of the users that are in the users database. TODO might want to make this internal.
     * /users [GET]
     */
    usersSnapshotRaw(): Promise<runtime.ApiResponse<Users>>;
    /**
     * this will return a snapshot of all of the users that are in the users database. TODO might want to make this internal.
     * /users [GET]
     */
    usersSnapshot(): Promise<Users>;
    /**
     * This enables the client to get the current user.  This endpoint will return a UserPRofile or will throw an error since you are sending user uid.
     * /users/{user} [GET] Scoped to Users
     */
    usersSpecificUserSnapshotRaw(requestParameters: UsersSpecificUserSnapshotRequest): Promise<runtime.ApiResponse<UserProfile>>;
    /**
     * This enables the client to get the current user.  This endpoint will return a UserPRofile or will throw an error since you are sending user uid.
     * /users/{user} [GET] Scoped to Users
     */
    usersSpecificUserSnapshot(requestParameters: UsersSpecificUserSnapshotRequest): Promise<UserProfile>;
}
