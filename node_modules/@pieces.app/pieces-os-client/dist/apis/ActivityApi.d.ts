/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Activity, FlattenedActivities } from '../models';
export interface ActivitiesSpecificActivitySnapshotRequest {
    activity: string;
    transferables?: boolean;
}
export interface ActivityIdentifiersSnapshotRequest {
    pseudo?: boolean;
    activityFilterEnum?: ActivityIdentifiersSnapshotActivityFilterEnumEnum;
}
export interface ActivityUpdateRequest {
    transferables?: boolean;
    activity?: Activity;
}
/**
 *
 */
export declare class ActivityApi extends runtime.BaseAPI {
    /**
     * This will attempt to get a specific activity.
     * /activity/{activity} [GET]
     */
    activitiesSpecificActivitySnapshotRaw(requestParameters: ActivitiesSpecificActivitySnapshotRequest): Promise<runtime.ApiResponse<Activity>>;
    /**
     * This will attempt to get a specific activity.
     * /activity/{activity} [GET]
     */
    activitiesSpecificActivitySnapshot(requestParameters: ActivitiesSpecificActivitySnapshotRequest): Promise<Activity>;
    /**
     * This is going to return all the identifiers of the activity event in order of most recent -> oldest.
     * /activity/identifiers [GET]
     */
    activityIdentifiersSnapshotRaw(requestParameters: ActivityIdentifiersSnapshotRequest): Promise<runtime.ApiResponse<FlattenedActivities>>;
    /**
     * This is going to return all the identifiers of the activity event in order of most recent -> oldest.
     * /activity/identifiers [GET]
     */
    activityIdentifiersSnapshot(requestParameters: ActivityIdentifiersSnapshotRequest): Promise<FlattenedActivities>;
    /**
     * this will update a specific activity.
     * /activity/update [POST]
     */
    activityUpdateRaw(requestParameters: ActivityUpdateRequest): Promise<runtime.ApiResponse<Activity>>;
    /**
     * this will update a specific activity.
     * /activity/update [POST]
     */
    activityUpdate(requestParameters: ActivityUpdateRequest): Promise<Activity>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ActivityIdentifiersSnapshotActivityFilterEnumEnum {
    Created = "CREATED",
    Updated = "UPDATED",
    Deleted = "DELETED",
    Referenced = "REFERENCED"
}
