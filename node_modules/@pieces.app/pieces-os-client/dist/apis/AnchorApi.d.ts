/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Anchor, SeededScoreIncrement } from '../models';
export interface AnchorRenameRequest {
    anchor: string;
    transferables?: boolean;
}
export interface AnchorScoresIncrementRequest {
    anchor: string;
    seededScoreIncrement?: SeededScoreIncrement;
}
export interface AnchorSpecificAnchorSnapshotRequest {
    anchor: string;
    transferables?: boolean;
}
export interface AnchorUpdateRequest {
    transferables?: boolean;
    anchor?: Anchor;
}
/**
 *
 */
export declare class AnchorApi extends runtime.BaseAPI {
    /**
     * This will rename a specific anchor.
     * /anchor/{anchor}/rename [POST]
     */
    anchorRenameRaw(requestParameters: AnchorRenameRequest): Promise<runtime.ApiResponse<Anchor>>;
    /**
     * This will rename a specific anchor.
     * /anchor/{anchor}/rename [POST]
     */
    anchorRename(requestParameters: AnchorRenameRequest): Promise<Anchor>;
    /**
     * This will take in a SeededScoreIncrement and will increment the material relative to the incoming body.
     * \'/anchor/{anchor}/scores/increment\' [POST]
     */
    anchorScoresIncrementRaw(requestParameters: AnchorScoresIncrementRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * This will take in a SeededScoreIncrement and will increment the material relative to the incoming body.
     * \'/anchor/{anchor}/scores/increment\' [POST]
     */
    anchorScoresIncrement(requestParameters: AnchorScoresIncrementRequest): Promise<void>;
    /**
     * This will get a snapshot of a single anchor.
     * /anchor/{anchor} [GET]
     */
    anchorSpecificAnchorSnapshotRaw(requestParameters: AnchorSpecificAnchorSnapshotRequest): Promise<runtime.ApiResponse<Anchor>>;
    /**
     * This will get a snapshot of a single anchor.
     * /anchor/{anchor} [GET]
     */
    anchorSpecificAnchorSnapshot(requestParameters: AnchorSpecificAnchorSnapshotRequest): Promise<Anchor>;
    /**
     * This will update a specific anchor.
     * /anchor/update [POST]
     */
    anchorUpdateRaw(requestParameters: AnchorUpdateRequest): Promise<runtime.ApiResponse<Anchor>>;
    /**
     * This will update a specific anchor.
     * /anchor/update [POST]
     */
    anchorUpdate(requestParameters: AnchorUpdateRequest): Promise<Anchor>;
}
