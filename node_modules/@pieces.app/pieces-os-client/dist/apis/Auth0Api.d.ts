/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Auth0User, EmbeddedModelSchema, OAuthToken, ResultedPKCE } from '../models';
export interface Auth0LogoutRequest {
    clientId?: string;
    returnTo?: string;
}
export interface AuthorizeAuth0Request {
    audience: string;
    scope: Array<AuthorizeAuth0ScopeEnum>;
    responseType: AuthorizeAuth0ResponseTypeEnum;
    clientId: string;
    codeChallengeMethod: AuthorizeAuth0CodeChallengeMethodEnum;
    codeChallenge: string;
    responseMode: AuthorizeAuth0ResponseModeEnum;
    state?: string;
    redirectUri?: string;
    connection?: string;
    prompt?: string;
}
export interface ExchangeForAuth0TokenRequest {
    grantType: ExchangeForAuth0TokenGrantTypeEnum;
    clientId: string;
    code: string;
    redirectUri: string;
    codeVerifier: string;
    schema?: EmbeddedModelSchema;
    audience?: string;
}
/**
 *
 */
export declare class Auth0Api extends runtime.BaseAPI {
    /**
     * https://auth0.com/docs/api/authentication#logout
     * https://auth.pieces.services/v2/logout [GET]
     */
    auth0LogoutRaw(requestParameters: Auth0LogoutRequest): Promise<runtime.ApiResponse<string>>;
    /**
     * https://auth0.com/docs/api/authentication#logout
     * https://auth.pieces.services/v2/logout [GET]
     */
    auth0Logout(requestParameters: Auth0LogoutRequest): Promise<string>;
    /**
     * An endpoint that is used locally authenticate via a PKCE Flow.  Example https://auth.pieces.services /authorize?audience=https%3A%2F%2Fpieces.us.auth0.com%2Fapi%2Fv2%2F&scope=email+profile+offline_access+openid&response_type=code&client_id=9sW4Pa1LEjX67l6VO14u0207NLYeXnu1&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fpkce%2Fresponse%2Fcode&code_challenge_method=S256&code_challenge=yxRssZxdfBpMigRmDxAety1QU72Bd5WnDUbtlsCZOnk&response_mode=form_post&state=4bd0b9a389b4b229602346c33913b4c3c199628a90011ab3a901302ab62b3832
     * https://auth.pieces.services/authorize [GET]
     */
    authorizeAuth0Raw(requestParameters: AuthorizeAuth0Request): Promise<runtime.ApiResponse<ResultedPKCE>>;
    /**
     * An endpoint that is used locally authenticate via a PKCE Flow.  Example https://auth.pieces.services /authorize?audience=https%3A%2F%2Fpieces.us.auth0.com%2Fapi%2Fv2%2F&scope=email+profile+offline_access+openid&response_type=code&client_id=9sW4Pa1LEjX67l6VO14u0207NLYeXnu1&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fpkce%2Fresponse%2Fcode&code_challenge_method=S256&code_challenge=yxRssZxdfBpMigRmDxAety1QU72Bd5WnDUbtlsCZOnk&response_mode=form_post&state=4bd0b9a389b4b229602346c33913b4c3c199628a90011ab3a901302ab62b3832
     * https://auth.pieces.services/authorize [GET]
     */
    authorizeAuth0(requestParameters: AuthorizeAuth0Request): Promise<ResultedPKCE>;
    /**
     * An endpoint to generate a OAuth Token for an authentication flow.
     * https://auth.pieces.services/oauth/token [POST]
     */
    exchangeForAuth0TokenRaw(requestParameters: ExchangeForAuth0TokenRequest): Promise<runtime.ApiResponse<OAuthToken>>;
    /**
     * An endpoint to generate a OAuth Token for an authentication flow.
     * https://auth.pieces.services/oauth/token [POST]
     */
    exchangeForAuth0Token(requestParameters: ExchangeForAuth0TokenRequest): Promise<OAuthToken>;
    /**
     * Get the users info from the Auth0 API
     * https://auth.pieces.services/userinfo [GET]
     */
    getAuth0UserInfoRaw(): Promise<runtime.ApiResponse<Auth0User>>;
    /**
     * Get the users info from the Auth0 API
     * https://auth.pieces.services/userinfo [GET]
     */
    getAuth0UserInfo(): Promise<Auth0User>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum AuthorizeAuth0ScopeEnum {
    Openid = "openid",
    Email = "email",
    Profile = "profile",
    OfflineAccess = "offline_access"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AuthorizeAuth0ResponseTypeEnum {
    Code = "code"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AuthorizeAuth0CodeChallengeMethodEnum {
    S256 = "S256"
}
/**
    * @export
    * @enum {string}
    */
export declare enum AuthorizeAuth0ResponseModeEnum {
    FormPost = "form_post",
    Fragment = "fragment",
    Query = "query",
    WebMessage = "web_message"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ExchangeForAuth0TokenGrantTypeEnum {
    RefreshToken = "refresh_token",
    AuthorizationCode = "authorization_code"
}
