/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Model, ModelDownloadProgress } from '../models';
export interface ModelSpecificModelDownloadRequest {
    model: string;
}
export interface ModelSpecificModelDownloadCancelRequest {
    model: string;
}
export interface ModelSpecificModelDownloadProgressRequest {
    model: string;
}
export interface ModelSpecificModelLoadRequest {
    model: string;
}
export interface ModelSpecificModelUnloadRequest {
    model: string;
}
export interface ModelUpdateRequest {
    model?: Model;
}
export interface ModelsSpecificModelSnapshotRequest {
    model: string;
}
/**
 *
 */
export declare class ModelApi extends runtime.BaseAPI {
    /**
     * This will download a specific model onto your local machine.
     * /model/{model}/download [POST]
     */
    modelSpecificModelDownloadRaw(requestParameters: ModelSpecificModelDownloadRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * This will download a specific model onto your local machine.
     * /model/{model}/download [POST]
     */
    modelSpecificModelDownload(requestParameters: ModelSpecificModelDownloadRequest): Promise<Model>;
    /**
     * This will cancel a specific model download in progress.
     * /model/{model}/download/cancel [POST]
     */
    modelSpecificModelDownloadCancelRaw(requestParameters: ModelSpecificModelDownloadCancelRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * This will cancel a specific model download in progress.
     * /model/{model}/download/cancel [POST]
     */
    modelSpecificModelDownloadCancel(requestParameters: ModelSpecificModelDownloadCancelRequest): Promise<Model>;
    /**
     * This is a Websocket Connection, to get the progress of the downloading of a specific model.
     * /model/{model}/download/progress [WS]
     */
    modelSpecificModelDownloadProgressRaw(requestParameters: ModelSpecificModelDownloadProgressRequest): Promise<runtime.ApiResponse<ModelDownloadProgress>>;
    /**
     * This is a Websocket Connection, to get the progress of the downloading of a specific model.
     * /model/{model}/download/progress [WS]
     */
    modelSpecificModelDownloadProgress(requestParameters: ModelSpecificModelDownloadProgressRequest): Promise<ModelDownloadProgress>;
    /**
     * This will load an already downloaded model into memory. This is different that downloading becuase downloading the entire model onto your machine, load will load the downloaded model into memory.
     * /model/{model}/load [POST]
     */
    modelSpecificModelLoadRaw(requestParameters: ModelSpecificModelLoadRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * This will load an already downloaded model into memory. This is different that downloading becuase downloading the entire model onto your machine, load will load the downloaded model into memory.
     * /model/{model}/load [POST]
     */
    modelSpecificModelLoad(requestParameters: ModelSpecificModelLoadRequest): Promise<Model>;
    /**
     * This will unload an already loaded model from memory. This will free up the ram that this model is currently consuming.
     * /model/{model}/unload [POST]
     */
    modelSpecificModelUnloadRaw(requestParameters: ModelSpecificModelUnloadRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * This will unload an already loaded model from memory. This will free up the ram that this model is currently consuming.
     * /model/{model}/unload [POST]
     */
    modelSpecificModelUnload(requestParameters: ModelSpecificModelUnloadRequest): Promise<Model>;
    /**
     * This will update Machinelearning Model, this is only available for \"custom:true\" models.
     * /model/update [POST]
     */
    modelUpdateRaw(requestParameters: ModelUpdateRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * This will update Machinelearning Model, this is only available for \"custom:true\" models.
     * /model/update [POST]
     */
    modelUpdate(requestParameters: ModelUpdateRequest): Promise<Model>;
    /**
     * /model/{model} [GET]
     */
    modelsSpecificModelSnapshotRaw(requestParameters: ModelsSpecificModelSnapshotRequest): Promise<runtime.ApiResponse<Model>>;
    /**
     * /model/{model} [GET]
     */
    modelsSpecificModelSnapshot(requestParameters: ModelsSpecificModelSnapshotRequest): Promise<Model>;
}
