/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ConversationMessage, ConversationMessages, SeededConversationMessage } from '../models';
export interface MessagesCreateSpecificMessageRequest {
    transferables?: boolean;
    seededConversationMessage?: SeededConversationMessage;
}
export interface MessagesDeleteSpecificMessageRequest {
    message: string;
}
export interface MessagesSnapshotRequest {
    transferables?: boolean;
}
/**
 *
 */
export declare class ConversationMessagesApi extends runtime.BaseAPI {
    /**
     * This will create a Message on a specific conversation.
     * /messages/create [POST]
     */
    messagesCreateSpecificMessageRaw(requestParameters: MessagesCreateSpecificMessageRequest): Promise<runtime.ApiResponse<ConversationMessage>>;
    /**
     * This will create a Message on a specific conversation.
     * /messages/create [POST]
     */
    messagesCreateSpecificMessage(requestParameters: MessagesCreateSpecificMessageRequest): Promise<ConversationMessage>;
    /**
     * This will delete a specific message.
     * /messages/{message}/delete [POST]
     */
    messagesDeleteSpecificMessageRaw(requestParameters: MessagesDeleteSpecificMessageRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * This will delete a specific message.
     * /messages/{message}/delete [POST]
     */
    messagesDeleteSpecificMessage(requestParameters: MessagesDeleteSpecificMessageRequest): Promise<void>;
    /**
     * This will get all the messages.
     * /messages [GET]
     */
    messagesSnapshotRaw(requestParameters: MessagesSnapshotRequest): Promise<runtime.ApiResponse<ConversationMessages>>;
    /**
     * This will get all the messages.
     * /messages [GET]
     */
    messagesSnapshot(requestParameters: MessagesSnapshotRequest): Promise<ConversationMessages>;
}
