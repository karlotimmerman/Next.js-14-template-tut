/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AnnotationTypeEnum, EmbeddedModelSchema, FlattenedConversationMessages, GroupedTimestamp, MechanismEnum, ReferencedAnchor, ReferencedAsset, ReferencedConversation, ReferencedModel, ReferencedPerson, Score } from './';
/**
 * This is the flattened Version of the annotation, IMPORTANT: when referencing these, ONLY Take the UUID, do NOT polinate(ie w/ asset/person/model) the FlattenedAnnotation as it can create an infinite loop.
 * @export
 * @interface FlattenedAnnotation
 */
export interface FlattenedAnnotation {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedAnnotation
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {string}
     * @memberof FlattenedAnnotation
     */
    id: string;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedAnnotation
     */
    created: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedAnnotation
     */
    updated: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedAnnotation
     */
    deleted?: GroupedTimestamp;
    /**
     *
     * @type {MechanismEnum}
     * @memberof FlattenedAnnotation
     */
    mechanism?: MechanismEnum;
    /**
     *
     * @type {ReferencedAsset}
     * @memberof FlattenedAnnotation
     */
    asset?: ReferencedAsset;
    /**
     *
     * @type {ReferencedPerson}
     * @memberof FlattenedAnnotation
     */
    person?: ReferencedPerson;
    /**
     *
     * @type {AnnotationTypeEnum}
     * @memberof FlattenedAnnotation
     */
    type: AnnotationTypeEnum;
    /**
     * This is the text of the annotation.
     * @type {string}
     * @memberof FlattenedAnnotation
     */
    text: string;
    /**
     *
     * @type {ReferencedModel}
     * @memberof FlattenedAnnotation
     */
    model?: ReferencedModel;
    /**
     *
     * @type {boolean}
     * @memberof FlattenedAnnotation
     */
    pseudo?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof FlattenedAnnotation
     */
    favorited?: boolean;
    /**
     *
     * @type {ReferencedAnchor}
     * @memberof FlattenedAnnotation
     */
    anchor?: ReferencedAnchor;
    /**
     *
     * @type {ReferencedConversation}
     * @memberof FlattenedAnnotation
     */
    conversation?: ReferencedConversation;
    /**
     *
     * @type {Score}
     * @memberof FlattenedAnnotation
     */
    score?: Score;
    /**
     *
     * @type {FlattenedConversationMessages}
     * @memberof FlattenedAnnotation
     */
    messages?: FlattenedConversationMessages;
}
export declare function FlattenedAnnotationFromJSON(json: any): FlattenedAnnotation;
export declare function FlattenedAnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedAnnotation;
export declare function FlattenedAnnotationToJSON(value?: FlattenedAnnotation | null): any;
