"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnchorToJSON = exports.AnchorFromJSONTyped = exports.AnchorFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function AnchorFromJSON(json) {
    return AnchorFromJSONTyped(json, false);
}
exports.AnchorFromJSON = AnchorFromJSON;
function AnchorFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, _1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'id': json['id'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'type': (0, _1.AnchorTypeEnumFromJSON)(json['type']),
        'watch': !(0, runtime_1.exists)(json, 'watch') ? undefined : json['watch'],
        'points': (0, _1.FlattenedAnchorPointsFromJSON)(json['points']),
        'created': (0, _1.GroupedTimestampFromJSON)(json['created']),
        'updated': (0, _1.GroupedTimestampFromJSON)(json['updated']),
        'deleted': !(0, runtime_1.exists)(json, 'deleted') ? undefined : (0, _1.GroupedTimestampFromJSON)(json['deleted']),
        'assets': !(0, runtime_1.exists)(json, 'assets') ? undefined : (0, _1.FlattenedAssetsFromJSON)(json['assets']),
        'annotations': !(0, runtime_1.exists)(json, 'annotations') ? undefined : (0, _1.FlattenedAnnotationsFromJSON)(json['annotations']),
        'conversations': !(0, runtime_1.exists)(json, 'conversations') ? undefined : (0, _1.FlattenedConversationsFromJSON)(json['conversations']),
        'score': !(0, runtime_1.exists)(json, 'score') ? undefined : (0, _1.ScoreFromJSON)(json['score']),
    };
}
exports.AnchorFromJSONTyped = AnchorFromJSONTyped;
function AnchorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'schema': (0, _1.EmbeddedModelSchemaToJSON)(value.schema),
        'id': value.id,
        'name': value.name,
        'type': (0, _1.AnchorTypeEnumToJSON)(value.type),
        'watch': value.watch,
        'points': (0, _1.FlattenedAnchorPointsToJSON)(value.points),
        'created': (0, _1.GroupedTimestampToJSON)(value.created),
        'updated': (0, _1.GroupedTimestampToJSON)(value.updated),
        'deleted': (0, _1.GroupedTimestampToJSON)(value.deleted),
        'assets': (0, _1.FlattenedAssetsToJSON)(value.assets),
        'annotations': (0, _1.FlattenedAnnotationsToJSON)(value.annotations),
        'conversations': (0, _1.FlattenedConversationsToJSON)(value.conversations),
        'score': (0, _1.ScoreToJSON)(value.score),
    };
}
exports.AnchorToJSON = AnchorToJSON;
