"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenizedPKCEToJSON = exports.TokenizedPKCEFromJSONTyped = exports.TokenizedPKCEFromJSON = exports.TokenizedPKCEGrantTypeEnum = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
/**
* @export
* @enum {string}
*/
var TokenizedPKCEGrantTypeEnum;
(function (TokenizedPKCEGrantTypeEnum) {
    TokenizedPKCEGrantTypeEnum["RefreshToken"] = "refresh_token";
    TokenizedPKCEGrantTypeEnum["AuthorizationCode"] = "authorization_code";
})(TokenizedPKCEGrantTypeEnum || (exports.TokenizedPKCEGrantTypeEnum = TokenizedPKCEGrantTypeEnum = {}));
function TokenizedPKCEFromJSON(json) {
    return TokenizedPKCEFromJSONTyped(json, false);
}
exports.TokenizedPKCEFromJSON = TokenizedPKCEFromJSON;
function TokenizedPKCEFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, _1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'grantType': json['grant_type'],
        'clientId': json['client_id'],
        'code': json['code'],
        'redirectUri': json['redirect_uri'],
        'codeVerifier': json['code_verifier'],
        'audience': !(0, runtime_1.exists)(json, 'audience') ? undefined : json['audience'],
    };
}
exports.TokenizedPKCEFromJSONTyped = TokenizedPKCEFromJSONTyped;
function TokenizedPKCEToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'schema': (0, _1.EmbeddedModelSchemaToJSON)(value.schema),
        'grant_type': value.grantType,
        'client_id': value.clientId,
        'code': value.code,
        'redirect_uri': value.redirectUri,
        'code_verifier': value.codeVerifier,
        'audience': value.audience,
    };
}
exports.TokenizedPKCEToJSON = TokenizedPKCEToJSON;
