"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QGPTStreamOutputToJSON = exports.QGPTStreamOutputFromJSONTyped = exports.QGPTStreamOutputFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function QGPTStreamOutputFromJSON(json) {
    return QGPTStreamOutputFromJSONTyped(json, false);
}
exports.QGPTStreamOutputFromJSON = QGPTStreamOutputFromJSON;
function QGPTStreamOutputFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'request': !(0, runtime_1.exists)(json, 'request') ? undefined : json['request'],
        'relevance': !(0, runtime_1.exists)(json, 'relevance') ? undefined : (0, _1.QGPTRelevanceOutputFromJSON)(json['relevance']),
        'question': !(0, runtime_1.exists)(json, 'question') ? undefined : (0, _1.QGPTQuestionOutputFromJSON)(json['question']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, _1.QGPTStreamEnumFromJSON)(json['status']),
        'conversation': json['conversation'],
        'statusCode': !(0, runtime_1.exists)(json, 'statusCode') ? undefined : json['statusCode'],
        'errorMessage': !(0, runtime_1.exists)(json, 'errorMessage') ? undefined : json['errorMessage'],
        'agentRoutes': !(0, runtime_1.exists)(json, 'agentRoutes') ? undefined : (0, _1.QGPTAgentRoutesFromJSON)(json['agentRoutes']),
    };
}
exports.QGPTStreamOutputFromJSONTyped = QGPTStreamOutputFromJSONTyped;
function QGPTStreamOutputToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'request': value.request,
        'relevance': (0, _1.QGPTRelevanceOutputToJSON)(value.relevance),
        'question': (0, _1.QGPTQuestionOutputToJSON)(value.question),
        'status': (0, _1.QGPTStreamEnumToJSON)(value.status),
        'conversation': value.conversation,
        'statusCode': value.statusCode,
        'errorMessage': value.errorMessage,
        'agentRoutes': (0, _1.QGPTAgentRoutesToJSON)(value.agentRoutes),
    };
}
exports.QGPTStreamOutputToJSON = QGPTStreamOutputToJSON;
