/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Application, ByteDescriptor, Classification, EmbeddedModelSchema, FileFormat, FlattenedActivities, FlattenedAnalysis, FragmentFormat, GroupedTimestamp, Relationship, Role } from './';
/**
 * A representation of Data for a particular Form Factor of an Asset.[DAG Compatible - Directed Acyclic Graph Data Structure]
 *
 * FlattenedFormats prevent Cycles in Reference because all outbound references are strings as opposed to crosspollinated objects.
 *
 * i.e. FlattenedFormat.asset is Type String
 *
 * fragment or file will always be defined. Even thought they are both optional.
 * @export
 * @interface FlattenedFormat
 */
export interface FlattenedFormat {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedFormat
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {string}
     * @memberof FlattenedFormat
     */
    id: string;
    /**
     *
     * @type {string}
     * @memberof FlattenedFormat
     */
    creator: string;
    /**
     *
     * @type {Classification}
     * @memberof FlattenedFormat
     */
    classification: Classification;
    /**
     *
     * @type {string}
     * @memberof FlattenedFormat
     */
    icon?: string;
    /**
     *
     * @type {Role}
     * @memberof FlattenedFormat
     */
    role: Role;
    /**
     *
     * @type {Application}
     * @memberof FlattenedFormat
     */
    application: Application;
    /**
     * A uuid model. 36 Characters (4 Dashes, 32 Numbers/Letters)
     * @type {string}
     * @memberof FlattenedFormat
     */
    asset: string;
    /**
     *
     * @type {ByteDescriptor}
     * @memberof FlattenedFormat
     */
    bytes: ByteDescriptor;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedFormat
     */
    created: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedFormat
     */
    updated: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedFormat
     */
    deleted?: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedFormat
     */
    synced?: GroupedTimestamp;
    /**
     * This is a path used to determine what path this format lives at within the cloud.
     * @type {string}
     * @memberof FlattenedFormat
     */
    cloud?: string;
    /**
     *
     * @type {FragmentFormat}
     * @memberof FlattenedFormat
     */
    fragment?: FragmentFormat;
    /**
     *
     * @type {FileFormat}
     * @memberof FlattenedFormat
     */
    file?: FileFormat;
    /**
     *
     * @type {FlattenedAnalysis}
     * @memberof FlattenedFormat
     */
    analysis?: FlattenedAnalysis;
    /**
     *
     * @type {Relationship}
     * @memberof FlattenedFormat
     */
    relationship?: Relationship;
    /**
     *
     * @type {FlattenedActivities}
     * @memberof FlattenedFormat
     */
    activities?: FlattenedActivities;
}
export declare function FlattenedFormatFromJSON(json: any): FlattenedFormat;
export declare function FlattenedFormatFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedFormat;
export declare function FlattenedFormatToJSON(value?: FlattenedFormat | null): any;
