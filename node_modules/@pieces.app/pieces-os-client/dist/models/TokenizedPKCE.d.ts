/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { EmbeddedModelSchema } from './';
/**
 * This is the flow that mobile apps use to access an API. Use this endpoint to exchange an Authorization Code for a Token.
 * @export
 * @interface TokenizedPKCE
 */
export interface TokenizedPKCE {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof TokenizedPKCE
     */
    schema?: EmbeddedModelSchema;
    /**
     * Denotes the flow you are using. For Authorization Code, use authorization_code or refresh_token.
     * @type {string}
     * @memberof TokenizedPKCE
     */
    grantType: TokenizedPKCEGrantTypeEnum;
    /**
     * Your application's Client ID.
     * @type {string}
     * @memberof TokenizedPKCE
     */
    clientId: string;
    /**
     * The Authorization Code received from the initial /authorize call.
     * @type {string}
     * @memberof TokenizedPKCE
     */
    code: string;
    /**
     * This is required only if it was set at the GET /authorize endpoint. The values must match.
     * @type {string}
     * @memberof TokenizedPKCE
     */
    redirectUri: string;
    /**
     * Cryptographically random key that was used to generate the code_challenge passed to /authorize.
     * @type {string}
     * @memberof TokenizedPKCE
     */
    codeVerifier: string;
    /**
     * The audience domain: i.e. https://pieces.us.auth0.com
     * @type {string}
     * @memberof TokenizedPKCE
     */
    audience?: string;
}
/**
* @export
* @enum {string}
*/
export declare enum TokenizedPKCEGrantTypeEnum {
    RefreshToken = "refresh_token",
    AuthorizationCode = "authorization_code"
}
export declare function TokenizedPKCEFromJSON(json: any): TokenizedPKCE;
export declare function TokenizedPKCEFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenizedPKCE;
export declare function TokenizedPKCEToJSON(value?: TokenizedPKCE | null): any;
