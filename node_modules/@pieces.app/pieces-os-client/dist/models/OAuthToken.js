"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAuthTokenToJSON = exports.OAuthTokenFromJSONTyped = exports.OAuthTokenFromJSON = exports.OAuthTokenTokenTypeEnum = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
/**
* @export
* @enum {string}
*/
var OAuthTokenTokenTypeEnum;
(function (OAuthTokenTokenTypeEnum) {
    OAuthTokenTokenTypeEnum["Bearer"] = "Bearer";
})(OAuthTokenTokenTypeEnum || (exports.OAuthTokenTokenTypeEnum = OAuthTokenTokenTypeEnum = {}));
function OAuthTokenFromJSON(json) {
    return OAuthTokenFromJSONTyped(json, false);
}
exports.OAuthTokenFromJSON = OAuthTokenFromJSON;
function OAuthTokenFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, _1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': json['expires_in'],
        'scope': json['scope'],
        'refreshToken': !(0, runtime_1.exists)(json, 'refresh_token') ? undefined : json['refresh_token'],
        'idToken': !(0, runtime_1.exists)(json, 'id_token') ? undefined : json['id_token'],
    };
}
exports.OAuthTokenFromJSONTyped = OAuthTokenFromJSONTyped;
function OAuthTokenToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'schema': (0, _1.EmbeddedModelSchemaToJSON)(value.schema),
        'access_token': value.accessToken,
        'token_type': value.tokenType,
        'expires_in': value.expiresIn,
        'scope': value.scope,
        'refresh_token': value.refreshToken,
        'id_token': value.idToken,
    };
}
exports.OAuthTokenToJSON = OAuthTokenToJSON;
