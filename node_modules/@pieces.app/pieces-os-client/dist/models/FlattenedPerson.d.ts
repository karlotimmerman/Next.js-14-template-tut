/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { EmbeddedModelSchema, FlattenedAnnotations, FlattenedAssets, FlattenedTags, FlattenedWebsites, GroupedTimestamp, MechanismEnum, PersonAccess, PersonModel, PersonType, Score } from './';
/**
 * if expiration is add then, after the alloted expiration date the user will only have view && comment only permissions. Only present in the case there is a scope such as a defined collection/asset...
 *
 * if asset is passed then that means this person belongs to a scoped asset.
 * @export
 * @interface FlattenedPerson
 */
export interface FlattenedPerson {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedPerson
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {string}
     * @memberof FlattenedPerson
     */
    id: string;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedPerson
     */
    created: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedPerson
     */
    updated: GroupedTimestamp;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedPerson
     */
    deleted?: GroupedTimestamp;
    /**
     *
     * @type {PersonType}
     * @memberof FlattenedPerson
     */
    type: PersonType;
    /**
     *
     * @type {FlattenedAssets}
     * @memberof FlattenedPerson
     */
    assets?: FlattenedAssets;
    /**
     * This is a Map<String, MechanismEnum> where the the key is an asset id.
     * @type {{ [key: string]: MechanismEnum; }}
     * @memberof FlattenedPerson
     */
    mechanisms?: {
        [key: string]: MechanismEnum;
    };
    /**
     * This is an optional value that will keep track of the number of times this has been interacted with.
     * @type {number}
     * @memberof FlattenedPerson
     */
    interactions?: number;
    /**
     * This is a Map<String, PersonAccess> where the the key is an asset id.
     * @type {{ [key: string]: PersonAccess; }}
     * @memberof FlattenedPerson
     */
    access?: {
        [key: string]: PersonAccess;
    };
    /**
     *
     * @type {FlattenedTags}
     * @memberof FlattenedPerson
     */
    tags?: FlattenedTags;
    /**
     *
     * @type {FlattenedWebsites}
     * @memberof FlattenedPerson
     */
    websites?: FlattenedWebsites;
    /**
     * This is a Map<String, PersonModel>, where the the key is an asset id.
     * @type {{ [key: string]: PersonModel; }}
     * @memberof FlattenedPerson
     */
    models?: {
        [key: string]: PersonModel;
    };
    /**
     *
     * @type {FlattenedAnnotations}
     * @memberof FlattenedPerson
     */
    annotations?: FlattenedAnnotations;
    /**
     *
     * @type {Score}
     * @memberof FlattenedPerson
     */
    score?: Score;
}
export declare function FlattenedPersonFromJSON(json: any): FlattenedPerson;
export declare function FlattenedPersonFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedPerson;
export declare function FlattenedPersonToJSON(value?: FlattenedPerson | null): any;
