"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SeededAssetToJSON = exports.SeededAssetFromJSONTyped = exports.SeededAssetFromJSON = void 0;
const runtime_1 = require("../runtime");
const _1 = require("./");
function SeededAssetFromJSON(json) {
    return SeededAssetFromJSONTyped(json, false);
}
exports.SeededAssetFromJSON = SeededAssetFromJSON;
function SeededAssetFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, _1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : (0, _1.SeededAssetMetadataFromJSON)(json['metadata']),
        'application': (0, _1.ApplicationFromJSON)(json['application']),
        'format': (0, _1.SeededFormatFromJSON)(json['format']),
        'discovered': !(0, runtime_1.exists)(json, 'discovered') ? undefined : json['discovered'],
        'available': !(0, runtime_1.exists)(json, 'available') ? undefined : (0, _1.AvailableFormatsFromJSON)(json['available']),
        'pseudo': !(0, runtime_1.exists)(json, 'pseudo') ? undefined : json['pseudo'],
        'enrichment': !(0, runtime_1.exists)(json, 'enrichment') ? undefined : (0, _1.SeededAssetEnrichmentFromJSON)(json['enrichment']),
    };
}
exports.SeededAssetFromJSONTyped = SeededAssetFromJSONTyped;
function SeededAssetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'schema': (0, _1.EmbeddedModelSchemaToJSON)(value.schema),
        'metadata': (0, _1.SeededAssetMetadataToJSON)(value.metadata),
        'application': (0, _1.ApplicationToJSON)(value.application),
        'format': (0, _1.SeededFormatToJSON)(value.format),
        'discovered': value.discovered,
        'available': (0, _1.AvailableFormatsToJSON)(value.available),
        'pseudo': value.pseudo,
        'enrichment': (0, _1.SeededAssetEnrichmentToJSON)(value.enrichment),
    };
}
exports.SeededAssetToJSON = SeededAssetToJSON;
