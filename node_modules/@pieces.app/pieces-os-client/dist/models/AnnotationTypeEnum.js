"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnnotationTypeEnumToJSON = exports.AnnotationTypeEnumFromJSONTyped = exports.AnnotationTypeEnumFromJSON = exports.AnnotationTypeEnum = void 0;
/**
 * This is used to describe a specific type of annotation. NOTE** This is linked to the annotation_type_filter in the parameters folder(if you change an enum here, please adjust the enum there.)
 * @export
 * @enum {string}
 */
var AnnotationTypeEnum;
(function (AnnotationTypeEnum) {
    AnnotationTypeEnum["Description"] = "DESCRIPTION";
    AnnotationTypeEnum["Comment"] = "COMMENT";
    AnnotationTypeEnum["Documentation"] = "DOCUMENTATION";
    AnnotationTypeEnum["Summary"] = "SUMMARY";
    AnnotationTypeEnum["Explanation"] = "EXPLANATION";
    AnnotationTypeEnum["GitCommit"] = "GIT_COMMIT";
})(AnnotationTypeEnum || (exports.AnnotationTypeEnum = AnnotationTypeEnum = {}));
function AnnotationTypeEnumFromJSON(json) {
    return AnnotationTypeEnumFromJSONTyped(json, false);
}
exports.AnnotationTypeEnumFromJSON = AnnotationTypeEnumFromJSON;
function AnnotationTypeEnumFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.AnnotationTypeEnumFromJSONTyped = AnnotationTypeEnumFromJSONTyped;
function AnnotationTypeEnumToJSON(value) {
    return value;
}
exports.AnnotationTypeEnumToJSON = AnnotationTypeEnumToJSON;
